{"version":3,"sources":["webpack:///../@narative/gatsby-theme-novela/src/sections/articles/Articles.Hero.tsx","webpack:///../@narative/gatsby-theme-novela/src/templates/articles.template.tsx"],"names":["BlankSpace","ArticlesHero","authors","useContext","GridLayoutContext","gridLayout","hasSetGridLayout","setGridLayout","hero","site","edges","node","siteMetadata","tilesIsActive","find","author","featured","Error","Section","relative","id","HeadingContainer","style","maxWidth","SubheadingContainer","GridControlsContainer","GridButton","onClick","active","data-a11y","title","aria-label","Tiles","Rows","mediaqueries","desktop","tablet","phablet","p","theme","colors","primary","accent","hover","ArticlesGradient","ArticlesPage","location","pageContext","articles","group","additionalContext","Layout","SEO","pathname","narrow","ArticlesPaginator","show","pageCount","gradient","colorModeTransition"],"mappings":"wpCA4BA,IAiDMA,EAAa,mBAAH,mBAAG,CAAH,wFAODC,EAxDyB,SAAC,GAAgB,IAAdC,EAAc,EAAdA,QAAc,EACWC,qBAChEC,KAFqD,IAC/CC,kBAD+C,MAClC,QADkC,EACzBC,EADyB,EACzBA,iBAAkBC,EADO,EACPA,cAK1CC,EADU,OACKC,KAAKC,MAAM,GAAGC,KAAKC,aAAaJ,KAC/CK,EAAgBP,GAAmC,UAAfD,EAG1C,IAFuBH,EAAQY,MAAK,SAAAC,GAAM,OAAIA,EAAOC,YAGnD,MAAM,IAAIC,MAAJ,iGAMR,OACE,cAACC,EAAA,EAAD,CAASC,UAAQ,EAACC,GAAG,kBACnB,cAACC,EAAD,CAAkBC,MAAO,CAAEC,SAAaf,EAAKe,SAAV,QAGnC,cAACC,EAAD,KACE,cAACxB,EAAD,MACA,cAACyB,EAAD,KACE,cAACC,EAAD,CACEC,QAAS,kBAAMpB,EAAc,UAC7BqB,OAAQf,EACRgB,YAAU,QACVC,MAAM,6BACNC,aAAW,8BAEX,cAAC,IAAMC,MAAP,OAEF,cAACN,EAAD,CACEC,QAAS,kBAAMpB,EAAc,SAC7BqB,QAASf,EACTgB,YAAU,QACVC,MAAM,4BACNC,aAAW,6BAEX,cAAC,IAAME,KAAP,WAiBNT,EAAsB,mBAAH,mBAAG,CAAH,qFAMrBU,IAAaC,QANQ,SAUrBD,IAAaE,OAVQ,SAcrBF,IAAaG,QAdQ,UAmBnBZ,EAAwB,mBAAH,mBAAG,CAAH,mCAIvBS,IAAaE,OAJU,UASrBf,EAAmB,mBAAH,mBAAG,CAAH,kBAGlBa,IAAaC,QAHK,SAOlBD,IAAaE,OAPK,MAgChBV,GApBc,kBAAH,mBAAG,CAAH,4EAKN,SAAAY,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,UALd,aAQJ,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOE,SARhB,KAWbR,IAAaC,QAXA,SAebD,IAAaG,QAfA,MAoBE,sBAAH,mBAAG,CAAH,kOAgBE,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOG,QAhBtB,+HA0BQ,SAAAL,GAAC,OAAIA,EAAEC,MAAMC,OAAOE,SA1B5B,sEAgCD,SAAAJ,GAAC,OAAKA,EAAEV,OAAS,EAAI,MAhCpB,uCAoCF,SAAAU,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,UApClB,Q,YChHVG,GAFSC,UAnBgB,SAAC,GAA8B,IAA5BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACpCC,EAAWD,EAAYE,MACvB/C,EAAU6C,EAAYG,kBAAkBhD,QAE9C,OACE,cAACiD,EAAA,EAAD,KACE,cAACC,EAAA,EAAD,CAAKC,SAAUP,EAASO,WACxB,cAAC,EAAD,CAAcnD,QAASA,IACvB,cAACgB,EAAA,EAAD,CAASoC,QAAM,GACb,cAAC,IAAD,CAAcN,SAAUA,IACxB,cAACO,EAAD,CAAmBC,KAAMT,EAAYU,UAAY,GAC/C,cAAC,IAAcV,KAGnB,cAACH,EAAD,QAOmB,mBAAH,oBAAG,CAAH,uGAQN,SAAAN,GAAC,OAAIA,EAAEC,MAAMC,OAAOkB,WARd,gBASN,SAAApB,GAAC,OAAIA,EAAEC,MAAMoB,sBATP,MAYhBJ,EAAoB,mBAAH,oBAAG,EACtB,SAAAjB,GAAC,OAAIA,EAAEkB,MAAF","file":"component---narative-gatsby-theme-novela-src-templates-articles-template-tsx-fdebc57ec448cef1c448.js","sourcesContent":["import React, { useContext } from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport styled from '@emotion/styled';\n\nimport Section from '@components/Section';\nimport Icons from '@icons';\nimport mediaqueries from '@styles/media';\nimport { IAuthor } from '@types';\n\nimport { GridLayoutContext } from './Articles.List.Context';\n\nconst authorQuery = graphql`\n  {\n    site: allSite {\n      edges {\n        node {\n          siteMetadata {\n            hero {\n              heading\n              maxWidth\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ArticlesHero: React.FC<IAuthor> = ({ authors }) => {\n  const { gridLayout = 'tiles', hasSetGridLayout, setGridLayout } = useContext(\n    GridLayoutContext,\n  );\n\n  const results = useStaticQuery(authorQuery);\n  const hero = results.site.edges[0].node.siteMetadata.hero;\n  const tilesIsActive = hasSetGridLayout && gridLayout === 'tiles';\n  const featuredAuthor = authors.find(author => author.featured);\n\n  if (!featuredAuthor) {\n    throw new Error(`\n      No featured Author found.\n      Please ensure you have at least featured Author.\n  `);\n  }\n\n  return (\n    <Section relative id=\"Articles__Hero\">\n      <HeadingContainer style={{ maxWidth: `${hero.maxWidth}px` }}>\n        {/* <HeroHeading dangerouslySetInnerHTML={{ __html: hero.heading }} /> */}\n      </HeadingContainer>\n      <SubheadingContainer>\n        <BlankSpace />\n        <GridControlsContainer>\n          <GridButton\n            onClick={() => setGridLayout('tiles')}\n            active={tilesIsActive}\n            data-a11y=\"false\"\n            title=\"Show articles in Tile grid\"\n            aria-label=\"Show articles in Tile grid\"\n          >\n            <Icons.Tiles />\n          </GridButton>\n          <GridButton\n            onClick={() => setGridLayout('rows')}\n            active={!tilesIsActive}\n            data-a11y=\"false\"\n            title=\"Show articles in Row grid\"\n            aria-label=\"Show articles in Row grid\"\n          >\n            <Icons.Rows />\n          </GridButton>\n        </GridControlsContainer>\n      </SubheadingContainer>\n    </Section>\n  );\n};\n\nconst BlankSpace = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n  left: -10px;\n`;\n\nexport default ArticlesHero;\n\nconst SubheadingContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 100px;\n\n  ${mediaqueries.desktop`\n    margin-bottom: 80px;\n  `};\n\n  ${mediaqueries.tablet`\n    margin-bottom: 60px;\n  `};\n\n  ${mediaqueries.phablet`\n    display: none;\n  `};\n`;\n\nconst GridControlsContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${mediaqueries.tablet`\n    display: none;\n  `};\n`;\n\nconst HeadingContainer = styled.div`\n  margin: 100px 0;\n\n  ${mediaqueries.desktop`\n    width: 80%;\n  `}\n\n  ${mediaqueries.tablet`\n    width: 100%;\n  `}\n`;\n\nconst HeroHeading = styled.h1`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 52px;\n  line-height: 1.15;\n  color: ${p => p.theme.colors.primary};\n\n  a {\n    color: ${p => p.theme.colors.accent};\n  }\n\n  ${mediaqueries.desktop`\n    font-size: 38px\n  `}\n\n  ${mediaqueries.phablet`\n    font-size: 32px;\n  `}\n`;\n\nconst GridButton = styled.button<{ active: boolean }>`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 36px;\n  width: 36px;\n  border-radius: 50%;\n  background: transparent;\n  transition: background 0.25s;\n\n  &:not(:last-child) {\n    margin-right: 30px;\n  }\n\n  &:hover {\n    background: ${p => p.theme.colors.hover};\n  }\n\n  &[data-a11y='true']:focus::after {\n    content: '';\n    position: absolute;\n    left: -10%;\n    top: -10%;\n    width: 120%;\n    height: 120%;\n    border: 2px solid ${p => p.theme.colors.accent};\n    background: rgba(255, 255, 255, 0.01);\n    border-radius: 50%;\n  }\n\n  svg {\n    opacity: ${p => (p.active ? 1 : 0.25)};\n    transition: opacity 0.2s;\n\n    path {\n      fill: ${p => p.theme.colors.primary};\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport Section from \"@components/Section\";\nimport SEO from \"@components/SEO\";\nimport Layout from \"@components/Layout\";\nimport Paginator from \"@components/Navigation/Navigation.Paginator\";\n\nimport ArticlesHero from \"../sections/articles/Articles.Hero\";\nimport ArticlesList from \"../sections/articles/Articles.List\";\n\nimport { Template } from \"@types\";\n\nconst ArticlesPage: Template = ({ location, pageContext }) => {\n  const articles = pageContext.group;\n  const authors = pageContext.additionalContext.authors;\n\n  return (\n    <Layout>\n      <SEO pathname={location.pathname} />\n      <ArticlesHero authors={authors} />\n      <Section narrow>\n        <ArticlesList articles={articles} />\n        <ArticlesPaginator show={pageContext.pageCount > 1}>\n          <Paginator {...pageContext} />\n        </ArticlesPaginator>\n      </Section>\n      <ArticlesGradient />\n    </Layout>\n  );\n};\n\nexport default ArticlesPage;\n\nconst ArticlesGradient = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 590px;\n  z-index: 0;\n  pointer-events: none;\n  background: ${p => p.theme.colors.gradient};\n  transition: ${p => p.theme.colorModeTransition};\n`;\n\nconst ArticlesPaginator = styled.div<{ show: boolean }>`\n  ${p => p.show && `margin-top: 95px;`}\n`;\n"],"sourceRoot":""}