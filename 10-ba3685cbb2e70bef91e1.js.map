{"version":3,"sources":["webpack:///../node_modules/howler/dist/howler.js","webpack:///../node_modules/core-js/modules/_typed-buffer.js","webpack:///../node_modules/core-js/modules/_to-index.js","webpack:///../node_modules/core-js/modules/_array-copy-within.js","webpack:///../node_modules/core-js/modules/_typed-array.js","webpack:///../node_modules/core-js/modules/es6.typed.uint8-array.js","webpack:///../node_modules/core-js/modules/_typed.js"],"names":["HowlerGlobal","this","init","prototype","self","Howler","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","window","navigator","masterGain","noAudio","usingWebAudio","autoSuspend","ctx","autoUnlock","_setup","volume","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","i","length","_webAudio","ids","_getSoundIds","j","sound","_soundById","_node","mute","muted","stop","unload","close","codecs","ext","replace","state","_autoSuspend","Audio","oncanplaythrough","e","_setupCodecs","audioTest","err","canPlayType","mpegTest","checkOpera","userAgent","match","isOldOpera","parseInt","split","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","m4b","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","load","_autoResume","source","createBufferSource","buffer","connect","destination","start","noteOn","resume","onended","disconnect","document","removeEventListener","_emit","addEventListener","_obtainHtml5Audio","pop","testPlay","play","Promise","then","console","warn","audio","push","suspend","_sounds","_paused","_suspendTimer","clearTimeout","setTimeout","handleSuspension","_resumeAfterSuspend","Howl","o","src","error","_autoplay","autoplay","_format","format","_html5","html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","undefined","_xhr","method","xhr","headers","withCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","fn","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","event","action","url","str","exec","toLowerCase","location","protocol","slice","Sound","loadBuffer","internal","id","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","Math","max","_seek","duration","timeout","abs","setParams","_start","_stop","node","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","Infinity","bind","once","_clearTimer","playHtml5","playbackRate","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","arguments","_clearSound","_interval","args","index","indexOf","apply","fade","from","to","len","min","end","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","Date","now","_fadeTo","setInterval","tick","round","clearInterval","cancelScheduledValues","loopStart","loopEnd","playing","realTime","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","_endFn","splice","remCache","cache","on","events","off","isId","keys","Object","Array","isArray","msg","call","task","shift","ended","_drain","reset","limit","cnt","_panner","isIOS","vendor","test","howl","_parent","parent","create","createGain","createGainNode","_errorListener","_loadListener","_endListener","code","ceil","__default","loadSound","data","atob","dataView","Uint8Array","charCodeAt","decodeAudioData","XMLHttpRequest","open","responseType","forEach","key","setRequestHeader","status","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","exports","global","_super","_pos","_orientation","stereo","pan","pos","x","y","z","positionX","setTargetAtTime","positionY","positionZ","setPosition","orientation","xUp","yUp","zUp","or","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","orientationX","orientationY","orientationZ","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa","panner","type","createPanner","DESCRIPTORS","LIBRARY","$typed","hide","redefineAll","fails","anInstance","toInteger","toLength","toIndex","gOPN","f","dP","arrayFill","setToStringTag","$ArrayBuffer","$DataView","RangeError","BaseBuffer","pow","floor","log","LN2","$BUFFER","$LENGTH","$OFFSET","packIEEE754","value","mLen","nBytes","m","c","eLen","eMax","eBias","rt","s","unpackIEEE754","nBits","NaN","unpackI32","bytes","packI8","it","packI16","packI32","packF64","packF32","addGetter","C","get","view","isLittleEndian","intIndex","store","_b","pack","reverse","set","conversion","ABV","name","ArrayBufferProto","constructor","$setInt8","setInt8","getInt8","byteOffset","setUint8","byteLength","bufferLength","offset","getUint8","getInt16","getUint16","getInt32","getUint32","getFloat32","getFloat64","setInt16","setUint16","setInt32","setUint32","setFloat32","setFloat64","VIEW","module","number","toObject","toAbsoluteIndex","copyWithin","target","O","count","inc","$export","$buffer","propertyDesc","toPrimitive","has","classof","isObject","isArrayIter","getPrototypeOf","getIterFn","uid","wks","createArrayMethod","createArrayIncludes","speciesConstructor","ArrayIterators","Iterators","$iterDetect","setSpecies","arrayCopyWithin","$DP","$GOPD","gOPD","TypeError","ArrayProto","ArrayBuffer","DataView","arrayForEach","arrayFilter","arraySome","arrayEvery","arrayFind","arrayFindIndex","arrayIncludes","arrayIndexOf","arrayValues","values","arrayKeys","arrayEntries","entries","arrayLastIndexOf","lastIndexOf","arrayReduce","reduce","arrayReduceRight","reduceRight","arrayJoin","join","arraySort","sort","arraySlice","arrayToString","toString","arrayToLocaleString","toLocaleString","ITERATOR","TAG","TYPED_CONSTRUCTOR","DEF_CONSTRUCTOR","ALL_CONSTRUCTORS","CONSTR","TYPED_ARRAY","TYPED","$map","allocate","LITTLE_ENDIAN","Uint16Array","FORCED_SET","toOffset","BYTES","validate","speciesFromList","list","fromList","result","_d","$from","step","iterator","aLen","mapfn","mapping","iterFn","next","done","$of","TO_LOCALE_BUG","$toLocaleString","proto","every","callbackfn","fill","filter","find","predicate","findIndex","searchElement","includes","separator","map","middle","some","comparefn","subarray","begin","$begin","BYTES_PER_ELEMENT","$slice","$set","arrayLike","$iterators","isTAIndex","String","$getDesc","$setDesc","desc","configurable","writable","enumerable","S","F","getOwnPropertyDescriptor","defineProperty","$TypedArrayPrototype$","KEY","wrapper","CLAMPED","NAME","GETTER","SETTER","TypedArray","Base","TAC","FORCED","TypedArrayPrototype","addElement","that","v","getter","setter","$offset","$length","klass","$len","b","l","iter","Function","concat","$nativeIterator","CORRECT_ITER_NAME","$iterator","G","W","of","P","Typed","TypedArrayConstructors"],"mappings":"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","file":"10-ba3685cbb2e70bef91e1.js","sourcesContent":["require(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.typed.uint8-array\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.date.now\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.function.bind\");\n\nrequire(\"core-js/modules/es6.promise\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\n/*!\n *  howler.js v2.2.1\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n(function () {\n  'use strict';\n  /** Global Methods **/\n\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n\n  var HowlerGlobal = function HowlerGlobal() {\n    this.init();\n  };\n\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function init() {\n      var self = this || Howler; // Create a global ID counter.\n\n      self._counter = 1000; // Pool of unlocked HTML5 Audio objects.\n\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10; // Internal properties.\n\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = typeof window !== 'undefined' && window.navigator ? window.navigator : null; // Public properties.\n\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null; // Set to false to disable the auto audio unlocker.\n\n      self.autoUnlock = true; // Setup the various state values for global tracking.\n\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function volume(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol); // If we don't have an AudioContext created yet, run the setup.\n\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol; // Don't update any of the nodes if we are muted.\n\n        if (self._muted) {\n          return self;\n        } // When using Web Audio, we just need to adjust the master gain.\n\n\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        } // Loop through and change volume for all HTML5 audio nodes.\n\n\n        for (var i = 0; i < self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds(); // Loop through all sounds and change the volumes.\n\n\n            for (var j = 0; j < ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function mute(muted) {\n      var self = this || Howler; // If we don't have an AudioContext created yet, run the setup.\n\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted; // With Web Audio, we just need to mute the master gain.\n\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      } // Loop through and mute all HTML5 Audio nodes.\n\n\n      for (var i = 0; i < self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds(); // Loop through all sounds and mark the audio node as muted.\n\n\n          for (var j = 0; j < ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = muted ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function stop() {\n      var self = this || Howler; // Loop through all Howls and stop them.\n\n      for (var i = 0; i < self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function unload() {\n      var self = this || Howler;\n\n      for (var i = self._howls.length - 1; i >= 0; i--) {\n        self._howls[i].unload();\n      } // Create a new AudioContext to make sure it is fully reset.\n\n\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function codecs(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function _setup() {\n      var self = this || Howler; // Keeps track of the suspend/resume state of the AudioContext.\n\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended'; // Automatically begin the 30-second suspend process\n\n      self._autoSuspend(); // Check if audio is available.\n\n\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio(); // Check if the canplaythrough event is available.\n\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch (e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      } // Test to make sure audio isn't disabled in Internet Explorer.\n\n\n      try {\n        var test = new Audio();\n\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {} // Check for supported codecs.\n\n\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function _setupCodecs() {\n      var self = this || Howler;\n      var audioTest = null; // Must wrap in a try/catch because IE11 in server mode throws an error.\n\n      try {\n        audioTest = typeof Audio !== 'undefined' ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, ''); // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\n\n      var isOldOpera = checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33;\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function _unlockAudio() {\n      var self = this || Howler; // Only run this if Web Audio is supported and it hasn't already been unlocked.\n\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false; // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      } // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n\n\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050); // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n\n      var unlock = function unlock(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio(); // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n\n            audioNode._unlocked = true; // Add the audio node to the pool.\n\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        } // Loop through any assigned audio nodes and unlock them.\n\n\n        for (var i = 0; i < self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds(); // Loop through all sounds and unlock the audio nodes.\n\n\n            for (var j = 0; j < ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n\n                sound._node.load();\n              }\n            }\n          }\n        } // Fix Android can not play in suspend state.\n\n\n        self._autoResume(); // Create an empty buffer.\n\n\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination); // Play the empty buffer.\n\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        } // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n\n\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        } // Setup a timeout to check that we are unlocked on the next event loop.\n\n\n        source.onended = function () {\n          source.disconnect(0); // Update the unlocked state and prevent this check from happening again.\n\n          self._audioUnlocked = true; // Remove the touch start listener.\n\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true); // Let all sounds know that audio has been unlocked.\n\n          for (var i = 0; i < self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      }; // Setup a touch start listener to attempt an unlock in.\n\n\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function _obtainHtml5Audio() {\n      var self = this || Howler; // Return the next object from the pool if one exists.\n\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      } //.Check if the audio is locked and throw a warning.\n\n\n      var testPlay = new Audio().play();\n\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay[\"catch\"](function () {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function _releaseHtml5Audio(audio) {\n      var self = this || Howler; // Don't add audio to the pool if we don't know if it has been unlocked.\n\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function _autoSuspend() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      } // Check if any sounds are playing.\n\n\n      for (var i = 0; i < self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j = 0; j < self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      } // If no sound has played after 30 seconds, suspend the context.\n\n\n      self._suspendTimer = setTimeout(function () {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending'; // Handle updating the state of the audio context after suspending.\n\n        var handleSuspension = function handleSuspension() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n\n            self._autoResume();\n          }\n        }; // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n\n\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function _autoResume() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function () {\n          self.state = 'running'; // Emit to all Howls that the audio has resumed.\n\n          for (var i = 0; i < self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  }; // Setup the global audio controller.\n\n  var Howler = new HowlerGlobal();\n  /** Group Methods **/\n\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n\n  var Howl = function Howl(o) {\n    var self = this; // Throw an error if no source is provided.\n\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function init(o) {\n      var self = this; // If we don't have an AudioContext created yet, run the setup.\n\n      if (!Howler.ctx) {\n        setupAudioContext();\n      } // Setup user-defined default properties.\n\n\n      self._autoplay = o.autoplay || false;\n      self._format = typeof o.format !== 'string' ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = typeof o.preload === 'boolean' || o.preload === 'metadata' ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = typeof o.src !== 'string' ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false\n      }; // Setup all other default properties.\n\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false; // Setup event listeners.\n\n      self._onend = o.onend ? [{\n        fn: o.onend\n      }] : [];\n      self._onfade = o.onfade ? [{\n        fn: o.onfade\n      }] : [];\n      self._onload = o.onload ? [{\n        fn: o.onload\n      }] : [];\n      self._onloaderror = o.onloaderror ? [{\n        fn: o.onloaderror\n      }] : [];\n      self._onplayerror = o.onplayerror ? [{\n        fn: o.onplayerror\n      }] : [];\n      self._onpause = o.onpause ? [{\n        fn: o.onpause\n      }] : [];\n      self._onplay = o.onplay ? [{\n        fn: o.onplay\n      }] : [];\n      self._onstop = o.onstop ? [{\n        fn: o.onstop\n      }] : [];\n      self._onmute = o.onmute ? [{\n        fn: o.onmute\n      }] : [];\n      self._onvolume = o.onvolume ? [{\n        fn: o.onvolume\n      }] : [];\n      self._onrate = o.onrate ? [{\n        fn: o.onrate\n      }] : [];\n      self._onseek = o.onseek ? [{\n        fn: o.onseek\n      }] : [];\n      self._onunlock = o.onunlock ? [{\n        fn: o.onunlock\n      }] : [];\n      self._onresume = []; // Web Audio or HTML5 Audio?\n\n      self._webAudio = Howler.usingWebAudio && !self._html5; // Automatically try to enable audio.\n\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      } // Keep track of this Howl group in the global controller.\n\n\n      Howler._howls.push(self); // If they selected autoplay, add a play event to the load queue.\n\n\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function action() {\n            self.play();\n          }\n        });\n      } // Load the source file unless otherwise specified.\n\n\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function load() {\n      var self = this;\n      var url = null; // If no audio is available, quit immediately.\n\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n\n        return;\n      } // Make sure our source is in an array.\n\n\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      } // Loop through the sources and pick the first one that is compatible.\n\n\n      for (var i = 0; i < self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n\n            continue;\n          } // Extract the file extension from the URL or base64 data URI.\n\n\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        } // Log a warning if no extension was found.\n\n\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        } // Check if this extension is available.\n\n\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading'; // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      } // Create a new sound object and add it to the pool.\n\n\n      new Sound(self); // Load and decode the audio data for playback.\n\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function play(sprite, internal) {\n      var self = this;\n      var id = null; // Determine if a sprite, sound id or nothing was passed\n\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default'; // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n\n        if (!self._playLock) {\n          var num = 0;\n\n          for (var i = 0; i < self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      } // Get the selected node, or get one from the pool.\n\n\n      var sound = id ? self._soundById(id) : self._inactiveSound(); // If the sound doesn't exist, do nothing.\n\n      if (!sound) {\n        return null;\n      } // Select the sprite definition.\n\n\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      } // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n\n\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite; // Mark this sound as not ended in case another sound is played before this one loads.\n\n        sound._ended = false; // Add the sound to the queue to be played on load.\n\n        var soundId = sound._id;\n\n        self._queue.push({\n          event: 'play',\n          action: function action() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      } // Don't play the sound if an id was passed and it is already playing.\n\n\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      } // Make sure the AudioContext isn't suspended, and resume it if it is.\n\n\n      if (self._webAudio) {\n        Howler._autoResume();\n      } // Determine how long to play for and where to start playing.\n\n\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000 - seek);\n      var timeout = duration * 1000 / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite; // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n\n      sound._ended = false; // Update the parameters of the sound.\n\n      var setParams = function setParams() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      }; // End the sound instantly if seek is at the end.\n\n\n      if (seek >= stop) {\n        self._ended(sound);\n\n        return;\n      } // Begin the actual playback.\n\n\n      var node = sound._node;\n\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function playWebAudio() {\n          self._playLock = false;\n          setParams();\n\n          self._refreshBuffer(sound); // Setup the playback params.\n\n\n          var vol = sound._muted || self._muted ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime; // Play the sound using the supported method.\n\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          } // Start a new timer if none is present.\n\n\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function () {\n              self._emit('play', sound._id);\n\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true; // Wait for the audio context to resume before playing.\n\n          self.once('resume', playWebAudio); // Cancel the end timer.\n\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function playHtml5() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate; // Some browsers will throw an error if this is called without user interaction.\n\n          try {\n            var play = node.play(); // Support older browsers that don't support promises, and thus don't have this issue.\n\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true; // Set param values immediately.\n\n              setParams(); // Releases the lock and executes queued actions.\n\n              play.then(function () {\n                self._playLock = false;\n                node._unlocked = true;\n\n                if (!internal) {\n                  self._emit('play', sound._id);\n\n                  self._loadQueue();\n                }\n              })[\"catch\"](function () {\n                self._playLock = false;\n\n                self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' + 'on mobile devices and Chrome where playback was not within a user interaction.'); // Reset the ended and paused values.\n\n\n                sound._ended = true;\n                sound._paused = true;\n              });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n\n              self._emit('play', sound._id);\n\n              self._loadQueue();\n            } // Setting rate before playing won't work in IE, so we set it again here.\n\n\n            node.playbackRate = sound._rate; // If the node is still paused, then we can assume there was a playback issue.\n\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' + 'on mobile devices and Chrome where playback was not within a user interaction.');\n\n              return;\n            } // Setup the end timer on sprites or listen for the ended event.\n\n\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function () {\n                // Fire ended on this audio node.\n                self._ended(sound); // Clear this listener.\n\n\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        }; // If this is streaming audio, make sure the src is set and load again.\n\n\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        } // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n\n\n        var loadedNoReadyState = window && window.ejecta || !node.readyState && Howler._navigator.isCocoonJS;\n\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n\n          var listener = function listener() {\n            // Begin playback.\n            playHtml5(); // Clear this listener.\n\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n\n          node.addEventListener(Howler._canPlayEvent, listener, false); // Cancel the end timer.\n\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function pause(id) {\n      var self = this; // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function action() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      } // If no id is passed, get all ID's to be paused.\n\n\n      var ids = self._getSoundIds(id);\n\n      for (var i = 0; i < ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]); // Get the sound.\n\n\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true; // Stop currently running fades.\n\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              } // Clean up the buffer source.\n\n\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        } // Fire the pause event, unless `true` is passed as the 2nd argument.\n\n\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function stop(id, internal) {\n      var self = this; // If the sound hasn't loaded, add it to the load queue to stop when capable.\n\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function action() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      } // If no id is passed, get all ID's to be stopped.\n\n\n      var ids = self._getSoundIds(id);\n\n      for (var i = 0; i < ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]); // Get the sound.\n\n\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true; // Stop currently running fades.\n\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                } // Clean up the buffer source.\n\n\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n\n              sound._node.pause(); // If this is a live stream, stop download once the audio is stopped.\n\n\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function mute(muted, id) {\n      var self = this; // If the sound hasn't loaded, add it to the load queue to mute when capable.\n\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function action() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      } // If applying mute/unmute to all sounds, update the group's value.\n\n\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      } // If no id is passed, get all ID's to be muted.\n\n\n      var ids = self._getSoundIds(id);\n\n      for (var i = 0; i < ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted; // Cancel active fade and set the volume to the end value.\n\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function volume() {\n      var self = this;\n      var args = arguments;\n      var vol, id; // Determine the values based on arguments.\n\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n\n        var index = ids.indexOf(args[0]);\n\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      } // Update the volume or return the current volume.\n\n\n      var sound;\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function action() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        } // Set the group volume.\n\n\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        } // Update one or all volumes.\n\n\n        id = self._getSoundIds(id);\n\n        for (var i = 0; i < id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol; // Stop currently running fades.\n\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function fade(from, to, len, id) {\n      var self = this; // If the sound hasn't loaded, add it to the load queue to fade when capable.\n\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function action() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      } // Make sure the to/from/len values are numbers.\n\n\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len); // Set the volume to the start position.\n\n      self.volume(from, id); // Fade the volume of one or all sounds.\n\n      var ids = self._getSoundIds(id);\n\n      for (var i = 0; i < ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]); // Create a linear fade or fall back to timeouts with HTML5 Audio.\n\n\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          } // If we are using Web Audio, let the native methods do the actual fade.\n\n\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + len / 1000;\n            sound._volume = from;\n\n            sound._node.gain.setValueAtTime(from, currentTime);\n\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function _startFadeInterval(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, steps > 0 ? len / steps : len);\n      var lastTick = Date.now(); // Store the value being faded to.\n\n      sound._fadeTo = to; // Update the volume value on each interval tick.\n\n      sound._interval = setInterval(function () {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick; // Round to within 2 decimal points.\n\n        vol = Math.round(vol * 100) / 100; // Make sure the volume is in the right bounds.\n\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        } // Change the volume.\n\n\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        } // Set the group's volume.\n\n\n        if (isGroup) {\n          self._volume = vol;\n        } // When the fade is complete, stop it and fire event.\n\n\n        if (to < from && vol <= to || to > from && vol >= to) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function _stopFade(id) {\n      var self = this;\n\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function loop() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound; // Determine the values for loop and id.\n\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      } // If no id is passed, get all ID's to be looped.\n\n\n      var ids = self._getSoundIds(id);\n\n      for (var i = 0; i < ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function rate() {\n      var self = this;\n      var args = arguments;\n      var rate, id; // Determine the values based on arguments.\n\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n\n        var index = ids.indexOf(args[0]);\n\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      } // Update the playback rate or return the current value.\n\n\n      var sound;\n\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function action() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        } // Set the group rate.\n\n\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        } // Update one or all volumes.\n\n\n        id = self._getSoundIds(id);\n\n        for (var i = 0; i < id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n\n            sound._rate = rate; // Change the playback rate.\n\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            } // Reset the timers.\n\n\n            var seek = self.seek(id[i]);\n            var duration = (self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000 - seek;\n            var timeout = duration * 1000 / Math.abs(sound._rate); // Start a new end timer if sound is already playing.\n\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function seek() {\n      var self = this;\n      var args = arguments;\n      var seek, id; // Determine the values based on arguments.\n\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n\n        var index = ids.indexOf(args[0]);\n\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      } // If there is no ID, bail out.\n\n\n      if (typeof id === 'undefined') {\n        return self;\n      } // If the sound hasn't loaded, add it to the load queue to seek when capable.\n\n\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function action() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      } // Get the sound.\n\n\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n\n          if (playing) {\n            self.pause(id, true);\n          } // Move the position of the track and cancel timer.\n\n\n          sound._seek = seek;\n          sound._ended = false;\n\n          self._clearTimer(id); // Update the seek position for HTML5 Audio.\n\n\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          } // Seek and emit when ready.\n\n\n          var seekAndEmit = function seekAndEmit() {\n            self._emit('seek', id); // Restart the playback if the sound was playing.\n\n\n            if (playing) {\n              self.play(id, true);\n            }\n          }; // Wait for the play lock to be unset before emitting (HTML5 Audio).\n\n\n          if (playing && !self._webAudio) {\n            var emitSeek = function emitSeek() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function playing(id) {\n      var self = this; // Check the passed sound ID (if any).\n\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n\n        return sound ? !sound._paused : false;\n      } // Otherwise, loop through all sounds and check if any are playing.\n\n\n      for (var i = 0; i < self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function duration(id) {\n      var self = this;\n      var duration = self._duration; // If we pass an ID, get the sound and return the sprite length.\n\n      var sound = self._soundById(id);\n\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function state() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function unload() {\n      var self = this; // Stop playing any active sounds.\n\n      var sounds = self._sounds;\n\n      for (var i = 0; i < sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        } // Remove the source or disconnect.\n\n\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node); // Remove any event listeners.\n\n\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false); // Release the Audio object back to the pool.\n\n\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        } // Empty out all of the nodes.\n\n\n        delete sounds[i]._node; // Make sure all timers are cleared out.\n\n        self._clearTimer(sounds[i]._id);\n      } // Remove the references in the global Howler object.\n\n\n      var index = Howler._howls.indexOf(self);\n\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      } // Delete this sound from the cache (if no other Howl is using it).\n\n\n      var remCache = true;\n\n      for (i = 0; i < Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      } // Clear global errors.\n\n\n      Howler.noAudio = false; // Clear out `self`.\n\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function on(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {\n          id: id,\n          fn: fn,\n          once: once\n        } : {\n          id: id,\n          fn: fn\n        });\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function off(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0; // Allow passing just an event and ID.\n\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i = 0; i < events.length; i++) {\n          var isId = id === events[i].id;\n\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n\n        for (i = 0; i < keys.length; i++) {\n          if (keys[i].indexOf('_on') === 0 && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function once(event, fn, id) {\n      var self = this; // Setup the event listener.\n\n      self.on(event, fn, id, 1);\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function _emit(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event]; // Loop through event store and fire all functions.\n\n      for (var i = events.length - 1; i >= 0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function (fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0); // If this event was setup with `once`, remove it.\n\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      } // Pass the event type into load queue so that it can continue stepping.\n\n\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function _loadQueue(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0]; // Remove this task if a matching event was passed.\n\n        if (task.event === event) {\n          self._queue.shift();\n\n          self._loadQueue();\n        } // Run the task if no event type is passed.\n\n\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function _ended(sound) {\n      var self = this;\n      var sprite = sound._sprite; // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      } // Should this sound loop?\n\n\n      var loop = !!(sound._loop || self._sprite[sprite][2]); // Fire the ended event.\n\n      self._emit('end', sound._id); // Restart the playback for HTML5 Audio loop.\n\n\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      } // Restart this timer if on a Web Audio loop.\n\n\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n        var timeout = (sound._stop - sound._start) * 1000 / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      } // Mark the node as paused.\n\n\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n\n        self._clearTimer(sound._id); // Clean up the buffer source.\n\n\n        self._cleanBuffer(sound._node); // Attempt to auto-suspend AudioContext if no sounds are still playing.\n\n\n        Howler._autoSuspend();\n      } // When using a sprite, end the track.\n\n\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function _clearTimer(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function _soundById(id) {\n      var self = this; // Loop through all sounds and find the one with this ID.\n\n      for (var i = 0; i < self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function _inactiveSound() {\n      var self = this;\n\n      self._drain(); // Find the first inactive node to recycle.\n\n\n      for (var i = 0; i < self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      } // If no inactive node was found, create a new one.\n\n\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function _drain() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0; // If there are less sounds than the max pool size, we are done.\n\n      if (self._sounds.length < limit) {\n        return;\n      } // Count the number of inactive sounds.\n\n\n      for (i = 0; i < self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      } // Remove excess inactive sounds, going in reverse order.\n\n\n      for (i = self._sounds.length - 1; i >= 0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          } // Remove sounds until we have the pool size.\n\n\n          self._sounds.splice(i, 1);\n\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function _getSoundIds(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n\n        for (var i = 0; i < self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function _refreshBuffer(sound) {\n      var self = this; // Setup the buffer source for playback.\n\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src]; // Connect to the correct node.\n\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      } // Setup looping and playback rate.\n\n\n      sound._node.bufferSource.loop = sound._loop;\n\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function _cleanBuffer(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n\n        if (isIOS) {\n          try {\n            node.bufferSource.buffer = Howler._scratchBuffer;\n          } catch (e) {}\n        }\n      }\n\n      node.bufferSource = null;\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function _clearSound(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n  /** Single Sound Methods **/\n\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n\n  var Sound = function Sound(howl) {\n    this._parent = howl;\n    this.init();\n  };\n\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function init() {\n      var self = this;\n      var parent = self._parent; // Setup the default parameters.\n\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default'; // Generate a unique ID for this sound.\n\n      self._id = ++Howler._counter; // Add itself to the parent's pool.\n\n      parent._sounds.push(self); // Create the new node.\n\n\n      self.create();\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function create() {\n      var self = this;\n      var parent = self._parent;\n      var volume = Howler._muted || self._muted || self._parent._muted ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = typeof Howler.ctx.createGain === 'undefined' ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n\n        self._node.paused = true;\n\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio(); // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n\n        self._errorFn = self._errorListener.bind(self);\n\n        self._node.addEventListener('error', self._errorFn, false); // Listen for 'canplaythrough' event to let us know the sound is ready.\n\n\n        self._loadFn = self._loadListener.bind(self);\n\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false); // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n\n\n        self._endFn = self._endListener.bind(self);\n\n        self._node.addEventListener('ended', self._endFn, false); // Setup the new audio node.\n\n\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume(); // Begin loading the source.\n\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function reset() {\n      var self = this;\n      var parent = self._parent; // Reset all of the parameters of this sound.\n\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default'; // Generate a new ID so that it isn't confused with the previous sound.\n\n      self._id = ++Howler._counter;\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function _errorListener() {\n      var self = this; // Fire an error event and pass back the code.\n\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0); // Clear the event listener.\n\n\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function _loadListener() {\n      var self = this;\n      var parent = self._parent; // Round up the duration to account for the lower precision in HTML5 Audio.\n\n      parent._duration = Math.ceil(self._node.duration * 10) / 10; // Setup a sprite if none is defined.\n\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {\n          __default: [0, parent._duration * 1000]\n        };\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n\n        parent._emit('load');\n\n        parent._loadQueue();\n      } // Clear the event listener.\n\n\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function _endListener() {\n      var self = this;\n      var parent = self._parent; // Only handle the `ended`` event if the duration is Infinity.\n\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10; // Update the sprite that corresponds to the real duration.\n\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        } // Run the regular ended method.\n\n\n        parent._ended(self);\n      } // Clear the event listener since the duration is now correct.\n\n\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n  /** Helper Methods **/\n\n  /***************************************************************************/\n\n  var cache = {};\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n\n  var loadBuffer = function loadBuffer(self) {\n    var url = self._src; // Check if the buffer has already been cached and use it instead.\n\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration; // Load the sound into this Howl.\n\n      loadSound(self);\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n\n      for (var i = 0; i < data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer'; // Apply any custom headers to the request.\n\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function (key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function () {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n\n      xhr.onerror = function () {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n\n      safeXhrSend(xhr);\n    }\n  };\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n\n\n  var safeXhrSend = function safeXhrSend(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n\n\n  var decodeAudioData = function decodeAudioData(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function error() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    }; // Load the sound on success.\n\n\n    var success = function success(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    }; // Decode the buffer into an audio source.\n\n\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success)[\"catch\"](error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  };\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n\n\n  var loadSound = function loadSound(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    } // Setup a sprite if none is defined.\n\n\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {\n        __default: [0, self._duration * 1000]\n      };\n    } // Fire the loaded event.\n\n\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n\n      self._emit('load');\n\n      self._loadQueue();\n    }\n  };\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n\n\n  var setupAudioContext = function setupAudioContext() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    } // Check if we are using Web Audio and setup the AudioContext if we are.\n\n\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch (e) {\n      Howler.usingWebAudio = false;\n    } // If the audio context creation still failed, set using web audio to false.\n\n\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    } // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n\n\n    var iOS = /iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform);\n\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    } // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n\n\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = typeof Howler.ctx.createGain === 'undefined' ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    } // Re-run the setup on Howler.\n\n\n    Howler._setup();\n  }; // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n\n\n  if (typeof define === 'function' && define.amd) {\n    define([], function () {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  } // Add support for CommonJS libraries such as browserify.\n\n\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  } // Add to global in Node.js (for testing, etc).\n\n\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {\n    // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.1\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n\n(function () {\n  'use strict'; // Setup default properties.\n\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n  /** Global Methods **/\n\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n\n  HowlerGlobal.prototype.stereo = function (pan) {\n    var self = this; // Stop right here if not using Web Audio.\n\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    } // Loop through all Howls and update their stereo panning.\n\n\n    for (var i = self._howls.length - 1; i >= 0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n\n\n  HowlerGlobal.prototype.pos = function (x, y, z) {\n    var self = this; // Stop right here if not using Web Audio.\n\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    } // Set the defaults for optional 'y' & 'z'.\n\n\n    y = typeof y !== 'number' ? self._pos[1] : y;\n    z = typeof z !== 'number' ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n\n\n  HowlerGlobal.prototype.orientation = function (x, y, z, xUp, yUp, zUp) {\n    var self = this; // Stop right here if not using Web Audio.\n\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    } // Set the defaults for optional 'y' & 'z'.\n\n\n    var or = self._orientation;\n    y = typeof y !== 'number' ? or[1] : y;\n    z = typeof z !== 'number' ? or[2] : z;\n    xUp = typeof xUp !== 'number' ? or[3] : xUp;\n    yUp = typeof yUp !== 'number' ? or[4] : yUp;\n    zUp = typeof zUp !== 'number' ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n  /** Group Methods **/\n\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n\n\n  Howl.prototype.init = function (_super) {\n    return function (o) {\n      var self = this; // Setup user-defined default properties.\n\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      }; // Setup event listeners.\n\n      self._onstereo = o.onstereo ? [{\n        fn: o.onstereo\n      }] : [];\n      self._onpos = o.onpos ? [{\n        fn: o.onpos\n      }] : [];\n      self._onorientation = o.onorientation ? [{\n        fn: o.onorientation\n      }] : []; // Complete initilization with howler.js core's init function.\n\n      return _super.call(this, o);\n    };\n  }(Howl.prototype.init);\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n\n\n  Howl.prototype.stereo = function (pan, id) {\n    var self = this; // Stop right here if not using Web Audio.\n\n    if (!self._webAudio) {\n      return self;\n    } // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n\n\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function action() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    } // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n\n\n    var pannerType = typeof Howler.ctx.createStereoPanner === 'undefined' ? 'spatial' : 'stereo'; // Setup the group's stereo panning if no ID is passed.\n\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    } // Change the streo panning of one or all sounds in group.\n\n\n    var ids = self._getSoundIds(id);\n\n    for (var i = 0; i < ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower'; // Check if there is a panner setup and create a new one if not.\n\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n\n\n  Howl.prototype.pos = function (x, y, z, id) {\n    var self = this; // Stop right here if not using Web Audio.\n\n    if (!self._webAudio) {\n      return self;\n    } // If the sound hasn't loaded, add it to the load queue to change position when capable.\n\n\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function action() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    } // Set the defaults for optional 'y' & 'z'.\n\n\n    y = typeof y !== 'number' ? 0 : y;\n    z = typeof z !== 'number' ? -0.5 : z; // Setup the group's spatial position if no ID is passed.\n\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    } // Change the spatial position of one or all sounds in group.\n\n\n    var ids = self._getSoundIds(id);\n\n    for (var i = 0; i < ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n\n\n  Howl.prototype.orientation = function (x, y, z, id) {\n    var self = this; // Stop right here if not using Web Audio.\n\n    if (!self._webAudio) {\n      return self;\n    } // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n\n\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function action() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    } // Set the defaults for optional 'y' & 'z'.\n\n\n    y = typeof y !== 'number' ? self._orientation[1] : y;\n    z = typeof z !== 'number' ? self._orientation[2] : z; // Setup the group's spatial orientation if no ID is passed.\n\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    } // Change the spatial orientation of one or all sounds in group.\n\n\n    var ids = self._getSoundIds(id);\n\n    for (var i = 0; i < ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n\n\n  Howl.prototype.pannerAttr = function () {\n    var self = this;\n    var args = arguments;\n    var o, id, sound; // Stop right here if not using Web Audio.\n\n    if (!self._webAudio) {\n      return self;\n    } // Determine the values based on arguments.\n\n\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0]; // Set the grou's panner attribute values.\n\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    } // Update the values of the specified sounds.\n\n\n    var ids = self._getSoundIds(id);\n\n    for (var i = 0; i < ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        }; // Update the panner values or create a new panner if none exists.\n\n        var panner = sound._panner;\n\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          } // Create a new panner node.\n\n\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n  /** Single Sound Methods **/\n\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n\n\n  Sound.prototype.init = function (_super) {\n    return function () {\n      var self = this;\n      var parent = self._parent; // Setup user-defined default properties.\n\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr; // Complete initilization with howler.js core Sound's init function.\n\n      _super.call(this); // If a stereo or position was specified, set it up.\n\n\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  }(Sound.prototype.init);\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n\n\n  Sound.prototype.reset = function (_super) {\n    return function () {\n      var self = this;\n      var parent = self._parent; // Reset all spatial plugin properties on this sound.\n\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr; // If a stereo or position was specified, set it up.\n\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n\n        self._panner = undefined;\n\n        parent._refreshBuffer(self);\n      } // Complete resetting of the sound.\n\n\n      return _super.call(this);\n    };\n  }(Sound.prototype.reset);\n  /** Helper Methods **/\n\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n\n\n  var setupPanner = function setupPanner(sound, type) {\n    type = type || 'spatial'; // Create the new panner node.\n\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node); // Update the connections.\n\n\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();","'use strict';\nvar global = require('./_global');\nvar DESCRIPTORS = require('./_descriptors');\nvar LIBRARY = require('./_library');\nvar $typed = require('./_typed');\nvar hide = require('./_hide');\nvar redefineAll = require('./_redefine-all');\nvar fails = require('./_fails');\nvar anInstance = require('./_an-instance');\nvar toInteger = require('./_to-integer');\nvar toLength = require('./_to-length');\nvar toIndex = require('./_to-index');\nvar gOPN = require('./_object-gopn').f;\nvar dP = require('./_object-dp').f;\nvar arrayFill = require('./_array-fill');\nvar setToStringTag = require('./_set-to-string-tag');\nvar ARRAY_BUFFER = 'ArrayBuffer';\nvar DATA_VIEW = 'DataView';\nvar PROTOTYPE = 'prototype';\nvar WRONG_LENGTH = 'Wrong length!';\nvar WRONG_INDEX = 'Wrong index!';\nvar $ArrayBuffer = global[ARRAY_BUFFER];\nvar $DataView = global[DATA_VIEW];\nvar Math = global.Math;\nvar RangeError = global.RangeError;\n// eslint-disable-next-line no-shadow-restricted-names\nvar Infinity = global.Infinity;\nvar BaseBuffer = $ArrayBuffer;\nvar abs = Math.abs;\nvar pow = Math.pow;\nvar floor = Math.floor;\nvar log = Math.log;\nvar LN2 = Math.LN2;\nvar BUFFER = 'buffer';\nvar BYTE_LENGTH = 'byteLength';\nvar BYTE_OFFSET = 'byteOffset';\nvar $BUFFER = DESCRIPTORS ? '_b' : BUFFER;\nvar $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;\nvar $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;\n\n// IEEE754 conversions based on https://github.com/feross/ieee754\nfunction packIEEE754(value, mLen, nBytes) {\n  var buffer = new Array(nBytes);\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;\n  var i = 0;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  var e, m, c;\n  value = abs(value);\n  // eslint-disable-next-line no-self-compare\n  if (value != value || value === Infinity) {\n    // eslint-disable-next-line no-self-compare\n    m = value != value ? 1 : 0;\n    e = eMax;\n  } else {\n    e = floor(log(value) / LN2);\n    if (value * (c = pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * pow(2, eBias - 1) * pow(2, mLen);\n      e = 0;\n    }\n  }\n  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);\n  e = e << mLen | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);\n  buffer[--i] |= s * 128;\n  return buffer;\n}\nfunction unpackIEEE754(buffer, mLen, nBytes) {\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = eLen - 7;\n  var i = nBytes - 1;\n  var s = buffer[i--];\n  var e = s & 127;\n  var m;\n  s >>= 7;\n  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : s ? -Infinity : Infinity;\n  } else {\n    m = m + pow(2, mLen);\n    e = e - eBias;\n  } return (s ? -1 : 1) * m * pow(2, e - mLen);\n}\n\nfunction unpackI32(bytes) {\n  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];\n}\nfunction packI8(it) {\n  return [it & 0xff];\n}\nfunction packI16(it) {\n  return [it & 0xff, it >> 8 & 0xff];\n}\nfunction packI32(it) {\n  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];\n}\nfunction packF64(it) {\n  return packIEEE754(it, 52, 8);\n}\nfunction packF32(it) {\n  return packIEEE754(it, 23, 4);\n}\n\nfunction addGetter(C, key, internal) {\n  dP(C[PROTOTYPE], key, { get: function () { return this[internal]; } });\n}\n\nfunction get(view, bytes, index, isLittleEndian) {\n  var numIndex = +index;\n  var intIndex = toIndex(numIndex);\n  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b;\n  var start = intIndex + view[$OFFSET];\n  var pack = store.slice(start, start + bytes);\n  return isLittleEndian ? pack : pack.reverse();\n}\nfunction set(view, bytes, index, conversion, value, isLittleEndian) {\n  var numIndex = +index;\n  var intIndex = toIndex(numIndex);\n  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b;\n  var start = intIndex + view[$OFFSET];\n  var pack = conversion(+value);\n  for (var i = 0; i < bytes; i++) store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];\n}\n\nif (!$typed.ABV) {\n  $ArrayBuffer = function ArrayBuffer(length) {\n    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);\n    var byteLength = toIndex(length);\n    this._b = arrayFill.call(new Array(byteLength), 0);\n    this[$LENGTH] = byteLength;\n  };\n\n  $DataView = function DataView(buffer, byteOffset, byteLength) {\n    anInstance(this, $DataView, DATA_VIEW);\n    anInstance(buffer, $ArrayBuffer, DATA_VIEW);\n    var bufferLength = buffer[$LENGTH];\n    var offset = toInteger(byteOffset);\n    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');\n    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);\n    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);\n    this[$BUFFER] = buffer;\n    this[$OFFSET] = offset;\n    this[$LENGTH] = byteLength;\n  };\n\n  if (DESCRIPTORS) {\n    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');\n    addGetter($DataView, BUFFER, '_b');\n    addGetter($DataView, BYTE_LENGTH, '_l');\n    addGetter($DataView, BYTE_OFFSET, '_o');\n  }\n\n  redefineAll($DataView[PROTOTYPE], {\n    getInt8: function getInt8(byteOffset) {\n      return get(this, 1, byteOffset)[0] << 24 >> 24;\n    },\n    getUint8: function getUint8(byteOffset) {\n      return get(this, 1, byteOffset)[0];\n    },\n    getInt16: function getInt16(byteOffset /* , littleEndian */) {\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;\n    },\n    getUint16: function getUint16(byteOffset /* , littleEndian */) {\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return bytes[1] << 8 | bytes[0];\n    },\n    getInt32: function getInt32(byteOffset /* , littleEndian */) {\n      return unpackI32(get(this, 4, byteOffset, arguments[1]));\n    },\n    getUint32: function getUint32(byteOffset /* , littleEndian */) {\n      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;\n    },\n    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {\n      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);\n    },\n    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {\n      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);\n    },\n    setInt8: function setInt8(byteOffset, value) {\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packF32, value, arguments[2]);\n    },\n    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {\n      set(this, 8, byteOffset, packF64, value, arguments[2]);\n    }\n  });\n} else {\n  if (!fails(function () {\n    $ArrayBuffer(1);\n  }) || !fails(function () {\n    new $ArrayBuffer(-1); // eslint-disable-line no-new\n  }) || fails(function () {\n    new $ArrayBuffer(); // eslint-disable-line no-new\n    new $ArrayBuffer(1.5); // eslint-disable-line no-new\n    new $ArrayBuffer(NaN); // eslint-disable-line no-new\n    return $ArrayBuffer.name != ARRAY_BUFFER;\n  })) {\n    $ArrayBuffer = function ArrayBuffer(length) {\n      anInstance(this, $ArrayBuffer);\n      return new BaseBuffer(toIndex(length));\n    };\n    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];\n    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {\n      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);\n    }\n    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;\n  }\n  // iOS Safari 7.x bug\n  var view = new $DataView(new $ArrayBuffer(2));\n  var $setInt8 = $DataView[PROTOTYPE].setInt8;\n  view.setInt8(0, 2147483648);\n  view.setInt8(1, 2147483649);\n  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {\n    setInt8: function setInt8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    }\n  }, true);\n}\nsetToStringTag($ArrayBuffer, ARRAY_BUFFER);\nsetToStringTag($DataView, DATA_VIEW);\nhide($DataView[PROTOTYPE], $typed.VIEW, true);\nexports[ARRAY_BUFFER] = $ArrayBuffer;\nexports[DATA_VIEW] = $DataView;\n","// https://tc39.github.io/ecma262/#sec-toindex\nvar toInteger = require('./_to-integer');\nvar toLength = require('./_to-length');\nmodule.exports = function (it) {\n  if (it === undefined) return 0;\n  var number = toInteger(it);\n  var length = toLength(number);\n  if (number !== length) throw RangeError('Wrong length!');\n  return length;\n};\n","// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\n\nmodule.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {\n  var O = toObject(this);\n  var len = toLength(O.length);\n  var to = toAbsoluteIndex(target, len);\n  var from = toAbsoluteIndex(start, len);\n  var end = arguments.length > 2 ? arguments[2] : undefined;\n  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);\n  var inc = 1;\n  if (from < to && to < from + count) {\n    inc = -1;\n    from += count - 1;\n    to += count - 1;\n  }\n  while (count-- > 0) {\n    if (from in O) O[to] = O[from];\n    else delete O[to];\n    to += inc;\n    from += inc;\n  } return O;\n};\n","'use strict';\nif (require('./_descriptors')) {\n  var LIBRARY = require('./_library');\n  var global = require('./_global');\n  var fails = require('./_fails');\n  var $export = require('./_export');\n  var $typed = require('./_typed');\n  var $buffer = require('./_typed-buffer');\n  var ctx = require('./_ctx');\n  var anInstance = require('./_an-instance');\n  var propertyDesc = require('./_property-desc');\n  var hide = require('./_hide');\n  var redefineAll = require('./_redefine-all');\n  var toInteger = require('./_to-integer');\n  var toLength = require('./_to-length');\n  var toIndex = require('./_to-index');\n  var toAbsoluteIndex = require('./_to-absolute-index');\n  var toPrimitive = require('./_to-primitive');\n  var has = require('./_has');\n  var classof = require('./_classof');\n  var isObject = require('./_is-object');\n  var toObject = require('./_to-object');\n  var isArrayIter = require('./_is-array-iter');\n  var create = require('./_object-create');\n  var getPrototypeOf = require('./_object-gpo');\n  var gOPN = require('./_object-gopn').f;\n  var getIterFn = require('./core.get-iterator-method');\n  var uid = require('./_uid');\n  var wks = require('./_wks');\n  var createArrayMethod = require('./_array-methods');\n  var createArrayIncludes = require('./_array-includes');\n  var speciesConstructor = require('./_species-constructor');\n  var ArrayIterators = require('./es6.array.iterator');\n  var Iterators = require('./_iterators');\n  var $iterDetect = require('./_iter-detect');\n  var setSpecies = require('./_set-species');\n  var arrayFill = require('./_array-fill');\n  var arrayCopyWithin = require('./_array-copy-within');\n  var $DP = require('./_object-dp');\n  var $GOPD = require('./_object-gopd');\n  var dP = $DP.f;\n  var gOPD = $GOPD.f;\n  var RangeError = global.RangeError;\n  var TypeError = global.TypeError;\n  var Uint8Array = global.Uint8Array;\n  var ARRAY_BUFFER = 'ArrayBuffer';\n  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;\n  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';\n  var PROTOTYPE = 'prototype';\n  var ArrayProto = Array[PROTOTYPE];\n  var $ArrayBuffer = $buffer.ArrayBuffer;\n  var $DataView = $buffer.DataView;\n  var arrayForEach = createArrayMethod(0);\n  var arrayFilter = createArrayMethod(2);\n  var arraySome = createArrayMethod(3);\n  var arrayEvery = createArrayMethod(4);\n  var arrayFind = createArrayMethod(5);\n  var arrayFindIndex = createArrayMethod(6);\n  var arrayIncludes = createArrayIncludes(true);\n  var arrayIndexOf = createArrayIncludes(false);\n  var arrayValues = ArrayIterators.values;\n  var arrayKeys = ArrayIterators.keys;\n  var arrayEntries = ArrayIterators.entries;\n  var arrayLastIndexOf = ArrayProto.lastIndexOf;\n  var arrayReduce = ArrayProto.reduce;\n  var arrayReduceRight = ArrayProto.reduceRight;\n  var arrayJoin = ArrayProto.join;\n  var arraySort = ArrayProto.sort;\n  var arraySlice = ArrayProto.slice;\n  var arrayToString = ArrayProto.toString;\n  var arrayToLocaleString = ArrayProto.toLocaleString;\n  var ITERATOR = wks('iterator');\n  var TAG = wks('toStringTag');\n  var TYPED_CONSTRUCTOR = uid('typed_constructor');\n  var DEF_CONSTRUCTOR = uid('def_constructor');\n  var ALL_CONSTRUCTORS = $typed.CONSTR;\n  var TYPED_ARRAY = $typed.TYPED;\n  var VIEW = $typed.VIEW;\n  var WRONG_LENGTH = 'Wrong length!';\n\n  var $map = createArrayMethod(1, function (O, length) {\n    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);\n  });\n\n  var LITTLE_ENDIAN = fails(function () {\n    // eslint-disable-next-line no-undef\n    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;\n  });\n\n  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {\n    new Uint8Array(1).set({});\n  });\n\n  var toOffset = function (it, BYTES) {\n    var offset = toInteger(it);\n    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');\n    return offset;\n  };\n\n  var validate = function (it) {\n    if (isObject(it) && TYPED_ARRAY in it) return it;\n    throw TypeError(it + ' is not a typed array!');\n  };\n\n  var allocate = function (C, length) {\n    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {\n      throw TypeError('It is not a typed array constructor!');\n    } return new C(length);\n  };\n\n  var speciesFromList = function (O, list) {\n    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);\n  };\n\n  var fromList = function (C, list) {\n    var index = 0;\n    var length = list.length;\n    var result = allocate(C, length);\n    while (length > index) result[index] = list[index++];\n    return result;\n  };\n\n  var addGetter = function (it, key, internal) {\n    dP(it, key, { get: function () { return this._d[internal]; } });\n  };\n\n  var $from = function from(source /* , mapfn, thisArg */) {\n    var O = toObject(source);\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var iterFn = getIterFn(O);\n    var i, length, values, result, step, iterator;\n    if (iterFn != undefined && !isArrayIter(iterFn)) {\n      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {\n        values.push(step.value);\n      } O = values;\n    }\n    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);\n    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {\n      result[i] = mapping ? mapfn(O[i], i) : O[i];\n    }\n    return result;\n  };\n\n  var $of = function of(/* ...items */) {\n    var index = 0;\n    var length = arguments.length;\n    var result = allocate(this, length);\n    while (length > index) result[index] = arguments[index++];\n    return result;\n  };\n\n  // iOS Safari 6.x fails here\n  var TO_LOCALE_BUG = !!Uint8Array && fails(function () { arrayToLocaleString.call(new Uint8Array(1)); });\n\n  var $toLocaleString = function toLocaleString() {\n    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);\n  };\n\n  var proto = {\n    copyWithin: function copyWithin(target, start /* , end */) {\n      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);\n    },\n    every: function every(callbackfn /* , thisArg */) {\n      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    fill: function fill(value /* , start, end */) { // eslint-disable-line no-unused-vars\n      return arrayFill.apply(validate(this), arguments);\n    },\n    filter: function filter(callbackfn /* , thisArg */) {\n      return speciesFromList(this, arrayFilter(validate(this), callbackfn,\n        arguments.length > 1 ? arguments[1] : undefined));\n    },\n    find: function find(predicate /* , thisArg */) {\n      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    findIndex: function findIndex(predicate /* , thisArg */) {\n      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    forEach: function forEach(callbackfn /* , thisArg */) {\n      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    indexOf: function indexOf(searchElement /* , fromIndex */) {\n      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    includes: function includes(searchElement /* , fromIndex */) {\n      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    join: function join(separator) { // eslint-disable-line no-unused-vars\n      return arrayJoin.apply(validate(this), arguments);\n    },\n    lastIndexOf: function lastIndexOf(searchElement /* , fromIndex */) { // eslint-disable-line no-unused-vars\n      return arrayLastIndexOf.apply(validate(this), arguments);\n    },\n    map: function map(mapfn /* , thisArg */) {\n      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    reduce: function reduce(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars\n      return arrayReduce.apply(validate(this), arguments);\n    },\n    reduceRight: function reduceRight(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars\n      return arrayReduceRight.apply(validate(this), arguments);\n    },\n    reverse: function reverse() {\n      var that = this;\n      var length = validate(that).length;\n      var middle = Math.floor(length / 2);\n      var index = 0;\n      var value;\n      while (index < middle) {\n        value = that[index];\n        that[index++] = that[--length];\n        that[length] = value;\n      } return that;\n    },\n    some: function some(callbackfn /* , thisArg */) {\n      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    sort: function sort(comparefn) {\n      return arraySort.call(validate(this), comparefn);\n    },\n    subarray: function subarray(begin, end) {\n      var O = validate(this);\n      var length = O.length;\n      var $begin = toAbsoluteIndex(begin, length);\n      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(\n        O.buffer,\n        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,\n        toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin)\n      );\n    }\n  };\n\n  var $slice = function slice(start, end) {\n    return speciesFromList(this, arraySlice.call(validate(this), start, end));\n  };\n\n  var $set = function set(arrayLike /* , offset */) {\n    validate(this);\n    var offset = toOffset(arguments[1], 1);\n    var length = this.length;\n    var src = toObject(arrayLike);\n    var len = toLength(src.length);\n    var index = 0;\n    if (len + offset > length) throw RangeError(WRONG_LENGTH);\n    while (index < len) this[offset + index] = src[index++];\n  };\n\n  var $iterators = {\n    entries: function entries() {\n      return arrayEntries.call(validate(this));\n    },\n    keys: function keys() {\n      return arrayKeys.call(validate(this));\n    },\n    values: function values() {\n      return arrayValues.call(validate(this));\n    }\n  };\n\n  var isTAIndex = function (target, key) {\n    return isObject(target)\n      && target[TYPED_ARRAY]\n      && typeof key != 'symbol'\n      && key in target\n      && String(+key) == String(key);\n  };\n  var $getDesc = function getOwnPropertyDescriptor(target, key) {\n    return isTAIndex(target, key = toPrimitive(key, true))\n      ? propertyDesc(2, target[key])\n      : gOPD(target, key);\n  };\n  var $setDesc = function defineProperty(target, key, desc) {\n    if (isTAIndex(target, key = toPrimitive(key, true))\n      && isObject(desc)\n      && has(desc, 'value')\n      && !has(desc, 'get')\n      && !has(desc, 'set')\n      // TODO: add validation descriptor w/o calling accessors\n      && !desc.configurable\n      && (!has(desc, 'writable') || desc.writable)\n      && (!has(desc, 'enumerable') || desc.enumerable)\n    ) {\n      target[key] = desc.value;\n      return target;\n    } return dP(target, key, desc);\n  };\n\n  if (!ALL_CONSTRUCTORS) {\n    $GOPD.f = $getDesc;\n    $DP.f = $setDesc;\n  }\n\n  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {\n    getOwnPropertyDescriptor: $getDesc,\n    defineProperty: $setDesc\n  });\n\n  if (fails(function () { arrayToString.call({}); })) {\n    arrayToString = arrayToLocaleString = function toString() {\n      return arrayJoin.call(this);\n    };\n  }\n\n  var $TypedArrayPrototype$ = redefineAll({}, proto);\n  redefineAll($TypedArrayPrototype$, $iterators);\n  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);\n  redefineAll($TypedArrayPrototype$, {\n    slice: $slice,\n    set: $set,\n    constructor: function () { /* noop */ },\n    toString: arrayToString,\n    toLocaleString: $toLocaleString\n  });\n  addGetter($TypedArrayPrototype$, 'buffer', 'b');\n  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');\n  addGetter($TypedArrayPrototype$, 'byteLength', 'l');\n  addGetter($TypedArrayPrototype$, 'length', 'e');\n  dP($TypedArrayPrototype$, TAG, {\n    get: function () { return this[TYPED_ARRAY]; }\n  });\n\n  // eslint-disable-next-line max-statements\n  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {\n    CLAMPED = !!CLAMPED;\n    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';\n    var GETTER = 'get' + KEY;\n    var SETTER = 'set' + KEY;\n    var TypedArray = global[NAME];\n    var Base = TypedArray || {};\n    var TAC = TypedArray && getPrototypeOf(TypedArray);\n    var FORCED = !TypedArray || !$typed.ABV;\n    var O = {};\n    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];\n    var getter = function (that, index) {\n      var data = that._d;\n      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);\n    };\n    var setter = function (that, index, value) {\n      var data = that._d;\n      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;\n      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);\n    };\n    var addElement = function (that, index) {\n      dP(that, index, {\n        get: function () {\n          return getter(this, index);\n        },\n        set: function (value) {\n          return setter(this, index, value);\n        },\n        enumerable: true\n      });\n    };\n    if (FORCED) {\n      TypedArray = wrapper(function (that, data, $offset, $length) {\n        anInstance(that, TypedArray, NAME, '_d');\n        var index = 0;\n        var offset = 0;\n        var buffer, byteLength, length, klass;\n        if (!isObject(data)) {\n          length = toIndex(data);\n          byteLength = length * BYTES;\n          buffer = new $ArrayBuffer(byteLength);\n        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n          buffer = data;\n          offset = toOffset($offset, BYTES);\n          var $len = data.byteLength;\n          if ($length === undefined) {\n            if ($len % BYTES) throw RangeError(WRONG_LENGTH);\n            byteLength = $len - offset;\n            if (byteLength < 0) throw RangeError(WRONG_LENGTH);\n          } else {\n            byteLength = toLength($length) * BYTES;\n            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);\n          }\n          length = byteLength / BYTES;\n        } else if (TYPED_ARRAY in data) {\n          return fromList(TypedArray, data);\n        } else {\n          return $from.call(TypedArray, data);\n        }\n        hide(that, '_d', {\n          b: buffer,\n          o: offset,\n          l: byteLength,\n          e: length,\n          v: new $DataView(buffer)\n        });\n        while (index < length) addElement(that, index++);\n      });\n      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);\n      hide(TypedArrayPrototype, 'constructor', TypedArray);\n    } else if (!fails(function () {\n      TypedArray(1);\n    }) || !fails(function () {\n      new TypedArray(-1); // eslint-disable-line no-new\n    }) || !$iterDetect(function (iter) {\n      new TypedArray(); // eslint-disable-line no-new\n      new TypedArray(null); // eslint-disable-line no-new\n      new TypedArray(1.5); // eslint-disable-line no-new\n      new TypedArray(iter); // eslint-disable-line no-new\n    }, true)) {\n      TypedArray = wrapper(function (that, data, $offset, $length) {\n        anInstance(that, TypedArray, NAME);\n        var klass;\n        // `ws` module bug, temporarily remove validation length for Uint8Array\n        // https://github.com/websockets/ws/pull/645\n        if (!isObject(data)) return new Base(toIndex(data));\n        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n          return $length !== undefined\n            ? new Base(data, toOffset($offset, BYTES), $length)\n            : $offset !== undefined\n              ? new Base(data, toOffset($offset, BYTES))\n              : new Base(data);\n        }\n        if (TYPED_ARRAY in data) return fromList(TypedArray, data);\n        return $from.call(TypedArray, data);\n      });\n      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {\n        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);\n      });\n      TypedArray[PROTOTYPE] = TypedArrayPrototype;\n      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;\n    }\n    var $nativeIterator = TypedArrayPrototype[ITERATOR];\n    var CORRECT_ITER_NAME = !!$nativeIterator\n      && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);\n    var $iterator = $iterators.values;\n    hide(TypedArray, TYPED_CONSTRUCTOR, true);\n    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);\n    hide(TypedArrayPrototype, VIEW, true);\n    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);\n\n    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {\n      dP(TypedArrayPrototype, TAG, {\n        get: function () { return NAME; }\n      });\n    }\n\n    O[NAME] = TypedArray;\n\n    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);\n\n    $export($export.S, NAME, {\n      BYTES_PER_ELEMENT: BYTES\n    });\n\n    $export($export.S + $export.F * fails(function () { Base.of.call(TypedArray, 1); }), NAME, {\n      from: $from,\n      of: $of\n    });\n\n    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);\n\n    $export($export.P, NAME, proto);\n\n    setSpecies(NAME);\n\n    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });\n\n    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);\n\n    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;\n\n    $export($export.P + $export.F * fails(function () {\n      new TypedArray(1).slice();\n    }), NAME, { slice: $slice });\n\n    $export($export.P + $export.F * (fails(function () {\n      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();\n    }) || !fails(function () {\n      TypedArrayPrototype.toLocaleString.call([1, 2]);\n    })), NAME, { toLocaleString: $toLocaleString });\n\n    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;\n    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);\n  };\n} else module.exports = function () { /* empty */ };\n","require('./_typed-array')('Uint8', 1, function (init) {\n  return function Uint8Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar uid = require('./_uid');\nvar TYPED = uid('typed_array');\nvar VIEW = uid('view');\nvar ABV = !!(global.ArrayBuffer && global.DataView);\nvar CONSTR = ABV;\nvar i = 0;\nvar l = 9;\nvar Typed;\n\nvar TypedArrayConstructors = (\n  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'\n).split(',');\n\nwhile (i < l) {\n  if (Typed = global[TypedArrayConstructors[i++]]) {\n    hide(Typed.prototype, TYPED, true);\n    hide(Typed.prototype, VIEW, true);\n  } else CONSTR = false;\n}\n\nmodule.exports = {\n  ABV: ABV,\n  CONSTR: CONSTR,\n  TYPED: TYPED,\n  VIEW: VIEW\n};\n"],"sourceRoot":""}